{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/landing/landing.component.css","webpack:///./src/app/landing/landing.component.html","webpack:///./src/app/landing/landing.component.ts","webpack:///./src/app/landing/landing.service.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/main.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/search/search.component.css","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/searchbar/searchbar.component.css","webpack:///./src/app/searchbar/searchbar.component.html","webpack:///./src/app/searchbar/searchbar.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!-- to be able to use the routes created-->  \\n<router-outlet></router-outlet>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n    \\n\\n    \\n \\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n  //title = 'My Front End Yayy!';\n  \n  constructor(\n    \n  \t) { }\n\n  \n  ngOnInit() {\n  } \n\n}\n\n\n\n\n\n\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport {enableProdMode} from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { RouterModule, Routes } from '@angular/router';\nimport {HttpClientModule} from '@angular/common/http';\n\nenableProdMode();\n\nimport { AppComponent } from './app.component';\nimport { MainComponent } from './main/main.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LandingComponent } from './landing/landing.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { SearchComponent } from './search/search.component';\nimport {LandingService} from './landing/landing.service';\nimport {MainService} from './main/main.service';\n\n//in response to error angular.element is not defined\n//import * as _angular_ from 'angular';\n\n\n\n\nexport const routes: Routes = [{path:'', redirectTo:'app', pathMatch:'full'},{path: 'landing', component: LandingComponent},{path: 'app', component: LandingComponent}, {path: 'main', component: MainComponent}, {path: 'profile', component: ProfileComponent}, {path: 'search', component: SearchComponent} ];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainComponent,\n    ProfileComponent,\n    LandingComponent,\n    SearchbarComponent,\n    SearchComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    //i took out the config part from here...will this give me probs later??\n    RouterModule.forRoot(routes, {useHash:true}), \n    HttpClientModule\n  ],\n  exports:[\n    HttpClientModule,\n    RouterModule\n  ],\n  providers: [LandingService, MainService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n<div class=\\\"container\\\" style=\\\"background-color:lightblue;\\\">\\n  <!--only displayed up until register button is clicked -->\\n  <div class=\\\"container center\\\"  *ngIf=\\\"show3\\\">\\n    <h1>Welcome to {{title}}!</h1>\\n    <button type=\\\"button\\\" (click)=\\\"toggle()\\\" class=\\\"btn btn-primary btn-sm\\\" >Login</button> \\n    \\n <button type=\\\"button\\\" (click)=\\\"toggle2()\\\" class=\\\"btn btn-primary btn-sm\\\">Register</button> <br/> <br/>\\n  </div>\\n</div> \\n\\n  \\n  <!--div class=\\\"center\\\" *ngIf=\\\"!show3\\\">\\n    <button type=\\\"button\\\" (click)=\\\"toggle()\\\" class=\\\"btn btn-primary btn-sm\\\" >Login</button>\\n  </div--> \\n\\n\\n<!-- login and registration buttons-->\\n<div class=center>\\n \\n</div>\\n\\n  \\n\\n  <ng-container *ngIf=\\\"show\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">Login</div> \\n          <div class=\\\"panel-body\\\">\\n\\n          <!-- Login-->\\n          \\n          <form id=\\\"myForm1\\\"  #myForm1 = \\\"ngForm\\\">\\n            \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"account_name1\\\">Account Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"account_name1\\\" name=\\\"account_name1\\\" placeholder=\\\"Enter Account Name\\\" \\n              [(ngModel)]=\\\"account_name1\\\" required>\\n            </div>\\n      \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email_1\\\">Email</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"email_1\\\" name=\\\"email_1\\\" placeholder=\\\"Enter Registered Email\\\" \\n              [(ngModel)]=\\\"email_1\\\" required>\\n            </div>\\n      \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password1\\\">Password</label>\\n              <input type=\\\"password\\\" id=\\\"password1\\\" name=\\\"password1\\\" placeholder=\\\"Enter Password\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"password1\\\" required>\\n            </div> \\n\\n\\n\\n            \\n\\n\\n              <input type=\\\"reset\\\" class=\\\"btn btn-primary\\\" value=\\\"Clear\\\" > \\n              \\n              <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Login\\\" (click)=\\\"onSubmit(account_name1, email_1, password1)\\\">\\n            \\n\\n          </form> \\n\\n               <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Login with Facebook\\\" (click)=\\\"loginWithFacebook()\\\">\\n        </div> \\n\\n\\n\\n  </div>\\n    \\n  </ng-container>  \\n\\n  <ng-container *ngIf=\\\"show2\\\">\\n    <div class=\\\"panel panel-primary\\\">\\n        <div class=\\\"panel-heading\\\">Register</div> \\n          <div class=\\\"panel-body\\\">\\n\\n          <!-- Register-->\\n          \\n        </div> \\n        <!-- (ngSubmit)=\\\"onRegister(myForm.valid)\\\" #myForm = \\\"ngForm\\\"-->\\n   <form id=\\\"myForm\\\"  >\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"account_name\\\">Account Name</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"account_name\\\" name= \\\"account_name\\\" [(ngModel)]=\\\"account_name\\\" placeholder=\\\"Account Name\\\" required>\\n              <!--div id=\\\"account_name_wrong\\\" class=\\\"alert alert-danger\\\">\\n                <strong>Account Name is Required. </strong>   Account Name </label>\\n             </div-->\\n             <div id=\\\"account_name_wrong\\\" class=\\\"alert alert-danger hidden\\\">\\n               <strong>Account Name is Required. </strong> \\n             </div>\\n           </div>\\n      \\n\\n      \\n            <!--div class=\\\"form-group\\\">\\n              <label for=\\\"net_id\\\">Net Id</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"net_id\\\" name=\\\"net_id\\\" [(ngModel)]=\\\"net_id\\\" placeholder=\\\"Net Id\\\" required>\\n            </div-->\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"exampleInputEmail1\\\">Email address</label>\\n            <input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" aria-describedby=\\\"email_help\\\" pattern=\\\"[A-Za-z0-9._%+-]+@[A-za-z-z0-9.-]+\\\\.[a-z]{2,3}$\\\" placeholder=\\\"Enter email\\\" required >\\n            <small id=\\\"email_help\\\" class=\\\"form-text text-muted\\\">Must be in form handle@domain.xxx</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"phone_number\\\">Phone Number</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"phone_number\\\"  name=\\\"phone_number\\\" [(ngModel)]=\\\"phone_number\\\" aria-describedby=\\\"password_help\\\" placeholder=\\\"Enter phone number\\\" required pattern=\\\"[0-9]{3}[ -][0-9]{3}[ -][0-9]{4}\\\" required>\\n            <small id=\\\"password_help\\\" class=\\\"form-text text-muted\\\">Must be in form xxxxxxxxxx</small>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"birthdate\\\">Date of Birth</label>\\n            <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"birthdate\\\" name= \\\"birthdate\\\" [(ngModel)]=\\\"birthdate\\\" aria-describedby=\\\"birthdate_help\\\" placeholder=\\\"Enter birthdate\\\" required>\\n            <small id=\\\"birthdate_help\\\" class=\\\"form-text text-muted\\\">Must be at least 18 years of age</small>\\n          </div> \\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"zip_code\\\">Zip Code</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"zip_code\\\" name = zip_code [(ngModel)]=\\\"zip_code\\\" required pattern=\\\"[0-9]{5}\\\" placeholder=\\\"Zip Code\\\" required>\\n          </div>    \\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password\\\">Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" name=\\\"password\\\" [(ngModel)]=\\\"password\\\"  placeholder=\\\"Enter Password\\\" required>\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <label for=\\\"password_confirmation\\\">Confirm Password</label>\\n            <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password_confirmation\\\" name=\\\"password_confirmation\\\" [(ngModel)]=\\\"password_confirmation\\\" aria-describedby=\\\"password_confirmation_help\\\" placeholder=\\\"Re-enter password\\\" required>\\n            <small id=\\\"password_confirmation_help\\\" class=\\\"form-text text-muted\\\">Please ensure that password and password confirmation match</small>\\n          </div>\\n\\n          <input type=\\\"reset\\\" class=\\\"btn btn-primary\\\" value=\\\"Clear\\\" > \\n          <input type=\\\"button\\\" class=\\\"btn btn-primary\\\" value=\\\"Register\\\" (click)=\\\"onRegister(account_name,password)\\\">\\n      </form>\\n\\n  </div>\\n    \\n  </ng-container>  \"","import { Component, OnInit } from '@angular/core';\nimport{AppService} from \"../app.service\";\nimport {Router} from '@angular/router';\nimport {LandingService} from './landing.service';\nimport {NgForm} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-landing',\n  templateUrl: './landing.component.html',\n  styleUrls: ['./landing.component.css']\n  //providers: [LandingService]\n})\nexport class LandingComponent implements OnInit {\n  \n  title: string;\n  theRegistered;\n  theArticles;\n  //loginStatus = \"Just starting\"\n  loginStatus;\n  validUser;\n\n  //url = \"http://localhost:3000\"\n  url = \"https://jolisa-hw7backend.herokuapp.com\"\n  profileId;\n  status;\n  happyFacebook; \n\n\n\n  //status2 = \"Hi Bud\"\n  \n  \n\n//private router:Router\n\n  constructor(private landingService: LandingService, private router:Router, private http: HttpClient) { \n\n  http.get('/assets/registered.json').subscribe(res => {\n      this.theRegistered=res;\n      \n    } );\n\n  //get the article information for the table\n    http.get('/assets/articles.json').subscribe(res => {\n      this.theArticles = res;\n\n    });\n\n  \n\n  }\n  //private landingService: LandingService\n  //login values\n  //loginStatus: string\n\n  account_name1: string\n  password1:string\n\n\n  //registration values\n  account_name: string\n  \n  email:string\n  email_1:string\n  phone_number:string\n  birthdate: string\n  zip_code:string\n  password:string\n  password_confirmation:string\n  \n\n\n\n  \n\n\n  \n\n  //console.log(\"the registered\"+ this.theRegistered)\n \n    public show:boolean = false;\n     toggle() {\n     this.show = !this.show;\n     if (this.show2 ==true){\n      this.show2 = !this.show2\n     }\n     }\n\n  //show or hide the registration box \n    public show2:boolean = false;\n     toggle2() {\n     this.show2 = !this.show2;\n     if (this.show == true){\n      this.show = !this.show\n     }\n    }  \n\n\n\n  //show or hide original registration and login buttons, as well as new login button\n    public show3:boolean = true;\n     toggle3() {\n     this.show3 = !this.show3;\n     if (this.show == true || this.show2 == true){\n      this.show = !this.show\n      this.show2 = !this.show2\n     }\n    }  \n\n  onRegister(account_name, password){ \n   \n  \n    \n    if (!this.account_name){\n   \t  console.log(\"account name is not valid \")\n   \t  alert('account name required')  \n   \t  return\n    }\n    /*if (!this.net_id){\n   \t  alert(\"net id required\")\n   \t  return\n    }*/\n    var re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    re.test(this.email);\n    console.log(re.test(this.email))\n    if (re.test(this.email) == false){\n   \t  alert(\"email must be in form handle@domain.xxx; please revise \")\n   \t  return\n    }\n    var re2 = /^\\d{10}$/\n    if (re2.test(this.phone_number) == false){\n   \t  alert(\"phone number must be in form xxxxxxxxxx; please revise\")\n   \t  return\n    }\n    \n   if(this.birthdate !==undefined) {\n    var eighteen_years = Date.UTC(1988, 1, 1);\n    \n    \n    var the_dates = this.birthdate; \n    \n    \n    var current_date = new Date ();\n    var current_time = current_date.getTime ();\n    var true_year1 = the_dates.slice(0,4);\n    var true_year = parseInt(true_year1);\n    console.log(true_year)\n    var true_month1 = the_dates.slice(6,8);\n    var true_month = parseInt(true_month1);\n    console.log(true_month)\n    var true_day1 = the_dates.slice(7,9);\n    var true_day = parseInt(true_day1);\n    console.log(true_day)\n\n    /*true_year = number(true_year)\n    true_month = number(true_month)\n    true_day= number(true_day)*/\n\n    \n\n    console.log(\"type of true year\")\n    console.log( typeof true_year)\n\n\n    var kinda_user_age= Date.UTC(true_year, true_month, true_day);\n    var user_age = current_time - kinda_user_age\n    console.log(\"user age \"+ user_age+ \"eighteen years \"+ eighteen_years);\n    console.log((user_age) < eighteen_years)}\n    \n    if((user_age < eighteen_years)|| this.birthdate == undefined){\n\n      alert(\"Account holders must be at least 18 years of age.\");\n      return}\n    \n\n\n    var re3 = /^\\d{5}$/\n    if (re3.test(this.zip_code) == false){\n   \t  alert(\"zip code must be in form xxxxx; please revise\")\n   \t  return\n    }\n    if (!this.password){\n   \t  alert('password required')  \n   \t  return\n    }\n    if(this.password != this.password_confirmation) {\n      alert(\"password and password confirmation must be the same; please revise\");\n      return\n    } \n\n   var payload = { username: this.account_name , email: this.email , dob: this.birthdate , zipcode: this.zip_code, password: this.password}\n   this.http.post(this.url + '/register', payload, {'withCredentials':true}).subscribe(result =>{this.theRegistered = result; console.log(result)})\n   \n   if (this.show == true || this.show2 == true){\n      this.show = !this.show\n      this.show2 = !this.show2\n      console.log(\"the entered valies to function \"+account_name + password)\n     }\n    return true\n\n  }\n\n  /*if (typeof(Storage) !== \"undefined\") {  \n    localStorage.setItem(\"theAccountName\", this.account_name);\n    localStorage.setItem(\"theNetId\", this.net_id);\n    localStorage.setItem(\"theEmail\", this.email);\n    localStorage.setItem(\"thePhoneNumber\", this.phone_number);\n    localStorage.setItem(\"theBirthdate\", this.birthdate);\n    localStorage.setItem(\"theZipcode\", this.zip_code);  \n    localStorage.setItem(\"thePassword\", this.password);\n    localStorage.setItem(\"thePasswordConfirmation\", this.password_confirmation);\n    //this is the status for the main page\n    localStorage.setItem(\"theStatus\", \"I'm feeling blessed.\")\n    localStorage.setItem(\"theStoredArticles\", this.theArticles)\n    \n\n    //localStorage.setItem(\"registrationInformation\", [this.account_name,this.display_name,this.email,this.phone_number,this.birthdate,this.password,this.password_confirmation])\n    var someVarName = localStorage.getItem(\"registrationInformation\");\n    console.log(someVarName)  \n   }*/\n\n  \n\n  loginUser(){\n    this.loginStatus='Hey Pretty Baby Let me Whisper in Your Ear.'\n\n  }\n\n\n   loginWithFacebook(){\n    //console.log(\"happy\")\n    //window.location.href=\"http://localhost:3000/auth/facebook\"\n    \n    console.log(\"sup chicka\")\n    /*this.http.post(this.url+ '/auth/facebook/callback', {},\n      {'withCredentials':true}).subscribe(result =>{this.happyFacebook = result; console.log(result);});*/\n\n\n    this.http.get(this.url+ '/auth/facebook',\n      {'withCredentials':true}).subscribe(result =>{this.happyFacebook = result; console.log(result);});\n\n     }\n\n\n  //the actual function\n  onSubmit(account_name1,email_1, password1) { \n     //this.router.navigate(['/main'])\n    //function here that returns the userId using a doc search on the email and username\n    //profileId = \n    //http.get()...\n    /*this.http.get('http://localhost:3000/headlines/[0]', {'withCredentials':true}).subscribe(result =>{this.status = result['headlines'][0]['headline']; console.log(result['headlines'][0]['headline'])}\n    \n     }*/\n     \n\n\n    console.log(\"teach me how to dougie\")\n    if (!this.account_name1){\n      console.log(\"account name is not valid \")\n      alert('account name required')\n      return\n    }\n    if (!this.password1){\n      console.log(\"password is not valid \")\n      alert('password required')\n      return\n    }\n    if (!this.email_1){\n      console.log(\"email is not valid \")\n      alert('email required')\n\n      return\n    }\n\n    //check to see whether it passes the login function\n\n    var payload = {\"username\":account_name1, \"password\": password1 }\n    //check to determine whether username and password are appropriate\n    this.http.post(this.url + '/login', payload, {'withCredentials':true}).subscribe(result =>{this.loginStatus = result['result']; console.log(result);\n      if(this.loginStatus == 'success'){\n        console.log(\"yayy! Valid username and password.\") \n      }\n      else{\n        console.log(\"Username and password invalid.\")\n        alert(this.loginStatus)\n        return\n\n      }\n      /*\n      console.log('here1', this.loginStatus)\n      if (this.loginStatus !== 'success'){\n        return\n      }*/\n\n      })\n    \n    console.log('here2')\n    //now check to determine whether the email is appropriate\n    console.log(\"account name 1\" + account_name1)\n    console.log(\"email_1\" + email_1)\n    this.http.get(this.url + '/profileId/'+ account_name1 +\"/\"+ email_1, {'withCredentials':true}).subscribe(result =>{this.loginStatus = result['profileId']; console.log(result); localStorage.setItem(\"profileId\", result['profileId']);\n      console.log(\"this is the login status \"+ this.loginStatus)\n      if (this.loginStatus == \"none\" ){\n        console.log('here3')\n        console.log(\"Not a valid email\")\n        alert('Please use email previously registered with account.')\n        return \n      }\n      else{\n        console.log('here4')\n        alert('You have successfully logged in.')\n        this.router.navigate(['/main'])\n      }\n\n     })\n   \n   /*if (this.loginStatus !== 'none' && this.loginStatus !== 'User name and password not on file'){\n    \n    console.log(\"We're all clear on the login.\")\n    console.log('this.loginStatus equals' + this.loginStatus)\n    \n   }*/\n\n    \n    }\n\n\n\n  ngOnInit() {\n    this.title = this.landingService.someMethod();\n    \n  }\n  \n\n\n}\n\n\n\n\n\n","\n\nimport {Injectable} from '@angular/core';\nimport { BrowserModule} from '@angular/platform-browser';\nimport {NgForm} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\nimport {Router} from '@angular/router';\n//import {HttpClientModule} from '@angular/commmon/http';\n\n\n@Injectable({\n\tprovidedIn: 'root'\n})\n\nexport class LandingService{\n  \n  constructor(private http: HttpClient, private router:Router){}\n  someMethod(){\n  \treturn \"We're All Friends!\";\n\n  /*Account_name = localStorage.getItem(\"theAccountName\")\n  Display_name = localStorage.getItem(\"theDisplayName\")\n  Email = localStorage.getItem(\"theEmail\")\n  Phone_number = localStorage.getItem(\"thePhoneNumber\") \n  Birthdate = localStorage.getItem(\"theBirthdate\")\n  Zipcode = localStorage.getItem(\"theZipcode\")\n  Password = localStorage.getItem(\"thePassword\")\n  Password_confirmation = localStorage.getItem(\"thePasswordConfirmation\")\n\n\n console.log(\"local storage info\"+Account_name )\n\n*/\n\n\n  \n\n  \t\n  }\n}\n","module.exports = \"\\n\\n\\n.table-wrapper-scroll-y {\\n  display: block;\\n  max-height: 400px;\\n  overflow-y: auto;\\n  -ms-overflow-style: -ms-autohiding-scrollbar;\\n}\\n\\n.thead-dark{\\n  background-color: black;\\n\\n}\\n\\n.sidenav {\\n    width: 170px;\\n    position: fixed;\\n    z-index: 1;\\n    top: 0px;\\n    left: 0px;\\n    background: #eee;\\n    overflow-x: hidden;\\n    padding: 8px 0;\\n}\\n\\n.sidenav a {\\n    padding: 6px 8px 6px 16px;\\n    text-decoration: none;\\n    font-size: 25px;\\n    color: #2196F3;\\n    display: block;\\n}\\n\\n.sidenav a:hover {\\n    color: #064579;\\n}\\n\\n.main {\\n    margin-left: 140px; /* Same width as the sidebar + left position in px */\\n    font-size: 13px; /* Increased text to enable scrolling */\\n    padding: 0px 10px;\\n}\\n\\n#navigation\\n{\\n    background-color: #0F2F56 ; \\n    height:100%;\\n    color: white;\\n    float:left;\\n    \\n    z-index:1;\\n}\\n\\n@media screen and (max-height: 450px) {\\n    .sidenav {padding-top: 15px;}\\n    .sidenav a {font-size: 18px;}\\n}\"","module.exports = \"\\n   \\n<router-outlet></router-outlet>\\n    \\n<div class=\\\"container\\\">\\n<div class=\\\"row\\\">\\n<h1 class=\\\"text-center\\\"> Your {{title}}</h1>\\n<!--All of the content above the table -->\\n\\n<div name= \\\"profile/avatar\\\" class=\\\"text-right\\\" >\\n  \\n  <h6> Hey Jojo</h6>\\n  <p id=\\\"myStatus\\\"> Status: {{status}}</p>\\n<!-- Button to update status-->\\n\\n  <div class=\\\"row\\\">\\t\\n  \\n    <img id=\\\"img1\\\" src= \\\"assets/jojo.png\\\" alt=\\\"Jojo\\\" style=\\\"width:60px;height:80px;\\\">\\t\\n    <a routerLink=\\\"/app\\\" (click) = \\\"logout()\\\">Logout </a>\\n    <a routerLink=\\\"/profile\\\"> Profile </a>\\n    \\n  </div>\\n\\n  <button type=\\\"button\\\" (click)=\\\"atoggle()\\\" class=\\\"btn btn-primary btn-sm\\\">Update Status</button> <br/> <br/>\\n\\n  \\n\\n  <ng-container *ngIf=\\\"show\\\">\\n    <!-- Changing your status-->\\n      <button id= \\\"myStatus\\\" type=\\\"button\\\" (click)=\\\"changeStatus(textarea.value)\\\" class=\\\"btn btn-primary btn-sm\\\">Update </button>\\n\\n      <textarea #textarea rows=\\\"2\\\" [(ngModel)]=\\\"newStatus\\\" name=\\\"aStatus\\\" type=\\\"text\\\"></textarea>\\n\\n    <!--input #textbox type=\\\"text\\\" [(ngModel)]=\\\"status\\\" required-->\\n\\n    \\n  </ng-container>\\n  <hr>\\n</div>\\n</div>\\n</div>\\n<!-- This is my sidebar, I put it all in a container split between the sidebar and the main section-->\\n\\n<div class=\\\"container\\\">\\n<div name=\\\"sidebar\\\" class=\\\"sidenav\\\" id=\\\"navigation\\\">\\t\\n\\n  <h3>My Followers</h3>  \\n \\n <button type=\\\"button\\\" (click)=\\\"toggle2()\\\" class=\\\"btn btn-primary btn-sm\\\">Add Follower</button> <br/> <br/>\\n <button type=\\\"button\\\" (click)=\\\"toggle4()\\\" class=\\\"btn btn-primary btn-sm\\\">Remove Follower</button> <br/> <br/>\\n \\n  <ng-container *ngIf=\\\"show2\\\">\\n    <!-- Describing the follower you want to add-->\\n\\n      <form id=\\\"myForm2\\\" #myForm2 = \\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"follower_name\\\">Follower Name:</label>\\n              <input class= \\\"follower_name\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"follower_name\\\" name=\\\"follower_name\\\"  \\n              [(ngModel)]=\\\"follower_name\\\" required>\\n            </div>\\n      \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"follower_status\\\"> Follower Email: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"follower_email\\\" name=\\\"follower_email\\\"  \\n              [(ngModel)]=\\\"follower_email\\\" required>\\n            </div>\\n      <button type=\\\"button\\\" (click)=\\\"addFollower(follower_name,follower_email)\\\" class=\\\"btn btn-primary btn-sm\\\">Post Follower </button>     \\n\\n          </form> \\n\\n  </ng-container>\\n\\n\\n  <ng-container *ngIf=\\\"show4\\\">\\n    <!-- Describing the follower you want to add-->\\n\\n      <form id=\\\"myForm4\\\" #myForm4 = \\\"ngForm\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"follower_name2\\\">Follower Name:</label>\\n              <input class= \\\"follower_name2\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"follower_name2\\\" name=\\\"follower_name2\\\"  \\n              [(ngModel)]=\\\"follower_name2\\\" required>\\n            </div>\\n      \\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"follower_status2\\\"> Follower Email: </label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"follower_email2\\\" name=\\\"follower_email2\\\"  \\n              [(ngModel)]=\\\"follower_email2\\\" required>\\n            </div>\\n      <button type=\\\"button\\\" (click)=\\\"removeFriend(follower_name2,follower_email2)\\\" class=\\\"btn btn-primary btn-sm\\\">Remove </button>     \\n\\n          </form> \\n\\n  </ng-container>\\n\\n\\n\\n\\n\\n\\n  <div class=\\\"followers\\\">\\n   <div *ngFor=\\\"let follower of theFollowers\\\">\\n    <div *ngIf='mainService.isDefined(follower)'>\\n    <p> {{follower.username}} </p>\\n    <p><img id=\\\"img1\\\" src= {{follower.avatar}} alt=\\\"\\n      jojo\\\" style=\\\"float:left;width:70px;height:80px;\\\"> Status: {{follower.headline}}  </p><br><br><br>\\n    </div>  \\n   </div>\\n    <!--span class=\\\"followerName\\\">{follower.name}}</span> {{follower.avatar}}{{follower.status}}\\n  </li-->\\n </div>\\n\\n<!--ul class=\\\"followers\\\">\\n  <li *ngFor=\\\"let follower of theFollowers\\\">\\n    <span class=\\\"friends\\\">{{follower.name}}</span> {{follower.avatar}}{{follower.status}}\\n  </li>\\n</ul-->\\n\\n  \\n</div>\\n\\n<!-- You can do the search bar here-->\\n<!--div class = \\\"center\\\"\\n<input type=\\\"text\\\" id=\\\"myInput\\\" onkeyup=\\\"myFunction()\\\" placeholder=\\\"Search for article by author or title..\\\" title=\\\"Type in a name\\\">\\n</div-->\\n\\n<div class=\\\"center\\\">\\n  <input class=\\\"searchParameters\\\" class=\\\"form-control\\\" rows=\\\"1\\\" id=\\\"searchParameters\\\" [(ngModel)]=\\\"searchParameters\\\" name=\\\"searchParameters\\\" type=\\\"text\\\" placeholder=\\\"Search by author or title...\\\" (change)=\\\"searching(searchParameters)\\\">\\n\\n\\n\\n</div>\\n\\n\\n\\n<!-- This is the div where all the non-sidebar content goes-->\\n\\n\\n\\n<div name=\\\"main content\\\" class=\\\"main\\\">\\n\\n\\n  <div class=\\\"table-wrapper-scroll-y\\\">\\n\\n  <table class=\\\"table table-bordered table-striped\\\"  >\\n    <thead class=\\\"thead-dark\\\">\\n      <tr>\\n        <th>\\n          Recent News <button id= \\\"some_comments\\\" class= \\\"center-right\\\" type=\\\"button\\\" (click)=\\\"commentViewing()\\\" class=\\\"btn btn-primary btn-sm\\\">View Article Comments</button>\\n        </th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <!-- Inserting new table entries as users create them-->\\n      <!--tr *ngFor=\\\"let row of rows\\\">\\n      <td>{{row.newPost}}</td>     \\n      </tr--> \\n\\n        <!-- on-mouseover='filterArticle(article)'-->\\n      <div *ngFor=\\\"let article of theArticles\\\" >\\n      <!--div *ngIf='filterArticle(article)'-->\\n      <div *ngIf='filterArticle(article)'>\\n      <tr >\\n      <td>{{article.body}} \\n        <div *ngIf='mainService.hasImage(article)'>\\n        <img id=\\\"img2\\\" src= {{article.picture}} style=\\\"float:right;width:80px;height:80px;\\\">\\n         </div>\\n\\n        <br>{{article.author}} <br>{{article.date}} <br><br>\\n\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">Comment</button>\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary btn-sm\\\">Edit</button><br><br>\\n\\n      \\n      <br><br>\\n\\n      <div *ngIf='show3'>\\n        Comments: <br>\\n        <strong>{{article.comments}}</strong><br><br>\\n      </div>  \\n\\n\\n      </td>     \\n      </tr>\\n      \\n\\n      </div>\\n      </div>\\n\\n    </tbody>\\n  </table>\\n </div> \\n\\n\\n\\n\\n\\n<!-- finiwh here-->\\n\\n<div class=\\\"container\\\">\\n  <h2>Create New Post: </h2>\\n  <form id=\\\"myForm2\\\" (ngSubmit)=\\\"makePost(myForm2.valid)\\\" #myForm2 = \\\"ngForm\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Post\\\">Post:</label>\\n      <textarea class=\\\"form-control\\\" rows=\\\"3\\\" id=\\\"comment\\\" [(ngModel)]=\\\"newPost\\\" name=\\\"aPost\\\" type=\\\"text\\\"></textarea>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <input type=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\">\\n    </div>\\n\\n    <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\">Post</button>\\n    <button type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\">Clear</button>\\n    \\n    <!-- This guy currently does nothing-->\\n\\n   </form>\\n</div>\\n</div>\\n<!-- This is the div for the entire sidebar and main content bar-->\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\"","import {Component, OnInit, ViewChild,AfterViewInit, ElementRef} from '@angular/core';\nimport {AppService} from \"../app.service\";\nimport {Router} from '@angular/router';\nimport {HttpModule} from '@angular/http';\nimport {HttpClient} from '@angular/common/http';\nimport {FOLLOWERS} from './follower-class';\nimport {MainService} from './main.service';\nimport {Observable} from 'rxjs';\nimport {debounceTime, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n  //providers: [MainService]\n})\n\nexport class MainComponent implements OnInit {\n  title: string;\n  shared: string\n  theFollowers;\n  theArticles;\n  loginStatus = \"logged in\"\n  //theArticles;\n\n  //retrievedArticles: string;\n  articlesCopy;\n  theAuthors;\n  authors;\n  names;\n  //url = \"http://localhost:3000\"\n  url = \"https://jolisa-hw7backend.herokuapp.com\"\n  \n\n\n  //somehow broke this, would need to fix it for articles to remain persistent\n  //theArticles = JSON.parse(localStorage.getItem(\"theStoredArticles\"));\n\n  //status;\n\n\n  public newPost: string;\n  public rows: Array<{ newPost: string }> = [];\n\n  public show2: boolean = false;\n  public show4: boolean = false;\n\n  //show or hide the update status box before updating\n  public show: boolean = false;\n\n  searchParameters: string;\n  newStatus: string;\n  \n  profileId = localStorage.getItem(\"profileId\")\n\n  status;\n  file;\n\n\n  //retrievedArticles = localStorage.getItem(\"theStoredArticles\");\n  \n  //theArticles = JSON.parse(localStorage.getItem(\"theStoredArticles\"));\n  \n  \n\n  constructor(public mainService: MainService, private http: HttpClient) {\n    //profileId = localStorage.getItem(\"profileId\")\n    //get the friends and folllowers for the side bar\n    //http.get('/assets/followers.json').subscribe(res => {\n      //this.theFollowers = res;});\n\n    //get the user's followers and their info\n    this.http.get(this.url +\"/followingInfo/\"+ this.profileId , {'withCredentials':true}).subscribe(result =>{this.theFollowers = result['following']; console.log(result['following']); console.log(this.theFollowers);});\n    \n    //set the articles feed\n    this.http.get(this.url + '/articles' , {'withCredentials':true}).subscribe(result =>{this.theArticles = result['articles']; console.log(\"the Articles \"+this.theArticles.length+this.theArticles);});\n\n    //get the user headline\n    this.http.get(this.url +\"/headlines/\"+ this.profileId,\n    {'withCredentials':true}).subscribe(result =>{this.status = result['headlines'][0]['headline']; console.log(this.status);});\n\n    \n    \n\n\n    \n\n\n    /*http.get('/assets/articles.json').subscribe(res => {\n      this.articlesCopy = res;\n\n    });*/\n\n\n    //get the authors list\n    http.get('/assets/authors.json').subscribe(res => {\n      this.theAuthors = res;\n\n    });\n    this.title = this.mainService.someMethod();\n    \n  }\n\n\n\n\n\n  onFileChanged(event) {\n    //var file = event.target.files[0]\n    this.file = event.target.files[0]\n    console.log(\"This is the file\"+ this.file)\n    console.log(typeof this.file)\n    //localStorage.setItem(\"theFile\", JSON.stringify(file))\n\n\n    //const fd = new FormData()\n    //fd.append('text', message)\n    //fd.append('image', file)\n  }\n\n  makePost(form) {\n    var theResult;\n    console.log(\"make post button works\");\n    \n    //this.theArticles = JSON.parse(localStorage.getItem(\"theStoredArticles\"));\n\n    //this is the get articles function with no id\n\n    this.http.get(this.url + '/articles' , {'withCredentials':true}).subscribe(result =>{this.theArticles = result['articles']; console.log(result);});\n\n    \n\n\n    \n    \n     //@ViewChild('imageInput') imageInput: ElementRef;\n     console.log(\"here is the imageFile\")\n     \n     //console.log(this.imageInput.nativeElement.files[0])\n     /*AfterViewInit() {\n        console.log(this.imageInput.nativeElement.value) ;\n      }*/\n\n      //payload = {\"image\": imageInput, \"text\": this.newPost}\n\n      //how can i globallly access the file??\n      console.log(\"This is the file type in makePost function\" + typeof this.file)\n      //file = JSON.parse(localStorage.getItem(\"theFile\"))\n      console.log(this.file)\n      const fd = new FormData()\n      fd.append('text', this.newPost)\n      fd.append('image', this.file)\n      console.log(\"this is the fd\" + fd)\n     \n     //these next two lines are options of things to try, but i'd need to import Headers and RequestOptions\n     //let headers = new Headers({ 'Content-Type': 'application/json' });\n     //let options = new RequestOptions({ headers: headers }); \n     \n      this.http.post(this.url + '/article', fd, {'withCredentials':true, headers: {\n          'Content-Type' : 'application/json'}\n      }).subscribe(result =>{this.theArticles = result['articles']; console.log(\"new article list \"+result);})\n\n\n\n      //this is the post articles function\n    //this.theArticles.unshift({\"titles\": this.newPost, \"image\": \"none\", \"author\": \"\", \"date\": \"\", \"comment\":\"\"})\n    //console.log(\"new article list\"+this.theArticles)\n\n    //var payload = {text: this.newPost, image:\"\"}\n    //this.http.post(this.url + '/article', fd, {'withCredentials':true}).subscribe(result =>{this.theArticles = result['articles']; console.log(result);\n      //console.log(\"new article list\"+this.theArticles);});\n\n\n\n\n    //localStorage.setItem(\"theStoredArticles\", JSON.stringify(this.theArticles))\n    //this.theArticles = JSON.parse(this.theArticles);\n\n    //clears the input\n    this.newPost = null;\n  }\n\n  //upload new image with post\n  \n  \n\n\n\n  toggle2() {\n    //add followers form\n    this.show2 = !this.show2\n    if (this.show2 == true && this.show4 == true){\n      //this.show2 = !this.show2\n      this.show4 = !this.show4\n     }\n    return\n  }\n  toggle4() {\n    //remove followers form\n    this.show4 = !this.show4\n    if (this.show4 == true && this.show2 == true){\n      this.show4 = !this.show4\n      this.show2 = !this.show2\n     }\n    return\n  }\n\n  atoggle() {\n    this.show = !this.show;\n    return;\n  }\n\n\n  changeStatus(value: string) {\n    this.show = !this.show;\n    //localStorage.setItem(\"theStatus\", ` '${value}'\\n`);\n    //this.status = ` '${value}'\\n`;\n    //this.status = localStorage.getItem(\"theStatus\");\n\n     \n    console.log(\"ckickis\")\n    var payload = { username: \"jmb27\",headline: ` '${value}'\\n` }\n    console.log()\n    console.log(\"hello buddy\")\n    console.log(this.profileId)\n    console.log(\"That was the profileId\")\n\n    //this.http.get('http://localhost:3000/headlines/[0]', {'withCredentials':true}).subscribe(result =>{this.status = result['headlines'][0]['headline']; console.log(result['headlines'][0]['headline'])}\n    \n     \n\n    this.http.put(this.url + '/headline', payload, {'withCredentials':true}).subscribe(result =>{this.status = result['headline']; console.log(result)})\n    console.log('That was the status')\n    console.log(  \"Here I am\"+this.status)\n\n     }\n\n\n  //add friend in sidebar\n  follower_name: string\n  follower_email: string\n  followerProfileId: string\n  friendRegistered :string\n  newFollowerList: string\n\n  addFollower(follower_name,follower_email) {\n    //check for validation\n\n    this.followerProfileId = ''\n    this.friendRegistered = \"true\"\n    //getting the profile info of the new follower\n    this.http.get(this.url + '/profileId/'+ follower_name +\"/\"+ follower_email, {'withCredentials':true}).subscribe(result =>{this.followerProfileId = result['profileId']; localStorage.setItem(\"theFollowerProfileId\", result['profileId'])\n      if (this.followerProfileId == \"none\"){\n        alert('New friend not a registered user; Please add only registered users as friends.')\n        this.friendRegistered = \"false\"\n        console.log(\"FRIEND REGISTEREDDDD?\" + this.friendRegistered)\n      }   \n\n    ;});\n      \n    console.log(\"this is the followerProfileId\"+localStorage.getItem(\"theFollowerProfileId\"))\n    //check to see if the user is on file\n    \n    if (this.friendRegistered == \"false\"){\n      //we won't add this unregistered friend, and can exit the addFollower function\n      return\n    }\n\n\n    //using that info to add the new user\n\n    this.http.put(this.url + '/following/'+ localStorage.getItem(\"theFollowerProfileId\"),{}, {'withCredentials':true}).subscribe(result =>{this.newFollowerList = result['following']; \n          console.log(\"result \"+result);console.log(\"this.theFollowers AYYYYYYYYYYY\"+ this.newFollowerList)\n          if (this.newFollowerList == \"not a user on file\"){\n            console.log(\"somehow we still tried to add them as a friend even tho we should've exited the function since the 'new friend' wasn't registered.\")\n          }\n        });\n        location.reload()\n    //and using the modified get function to provide the neccesary additional info\n    this.http.get(this.url +\"/followingInfo/\"+ this.profileId , {'withCredentials':true}).subscribe(result =>{this.theFollowers = result['following']; console.log(result['following']); \n      console.log(this.theFollowers);});\n      \n    this.show2 = !this.show2\n  }\n    //\n    \n    /*this.http.get(this.url + '/profileId/'+ follower_name +\"/\"+ follower_email, {'withCredentials':true}).subscribe(result =>{followerProfileId = result['profileId']; \n      console.log(\"result \"+result); console.log(\"follower ProfileId \"+followerProfileId);\n      if (this.followerProfileId == \"none\"){\n        alert('New friend not a registered user; Please add only registered users as friends.')\n      }\n      else{\n        //use the gathered friend's profileId in the put request to add them as a friend\n        //var payload = {user: followerProfileId}\n        this.http.put(this.url + '/following'+followerProfileId,{}, {'withCredentials':true}).subscribe(result =>{this.theFollowers = result['following']; \n          console.log(\"result \"+result);console.log(\"this.theFollowers \"+ this.theFollowers)\n          if (this.theFollowers == \"not a user on file\"){\n\n          }\n        });\n      }\n    //is it possible for me to make this put request in the body of this get request?\n\n\n  });*/\n    \n    \n\n    \n\n    /*console.log(\"folllower function here\")\n    if (typeof this.theArticles == 'undefined'){\n    //this.theArticles = JSON.parse(localStorage.getItem(\"theStoredArticles\"));\n    //set the value of this.theArticles\n    this.http.get(this.url + '/articles' , {'withCredentials':true}).subscribe(result =>{this.theArticles = result['articles']; console.log(result);});\n    }\n    if (!this.follower_name) {\n      console.log(\"account name is not valid \")\n      alert('follower name required to create follower')\n      return\n    }\n    //don't need to make people make up their follower's status' anymore\n    /*if (!this.follower_status) {\n      console.log(\"status needed\")\n      alert(\"status required to create follower\")\n      return\n    }*/\n    //console.log(\"Author is in Follower list\" + this.theFollowers.indexOf(this.follower_name))\n    //console.log(\"follower is in the articles list\"+ this.theArticles.indexOf(this.follower_name))\n    \n    /*console.log(\"these are the articles\"+ this.theArticles)\n    \n    //so this is basically to get the articles of the newly added user, which is no longer neccesary in this manner\n    var i;\n    for (i = 0; i < this.theArticles.length; i++) {\n        //console.log(\"this is the articles at\"+ i + this.theArticles[i])\n        \n        console.log(\"the authors are\" + this.theAuthors)\n        if ((this.theArticles[i].author).indexOf(this.follower_name) > -1 ) {\n          this.theAuthors.push(this.follower_name)\n          console.log(\"145Author is in Article list at index \" + i+ \"the authors are\" + this.theAuthors)\n\n          //console.log(\"before\" + this.theFollowers)\n          this.theFollowers.unshift({\"id\": this.theFollowers.length, \"names\": this.follower_name,\"avatar\": \"assets/doe.png\",\"status\": this.follower_status})\n\n          //console.log(\"after\" + this.theFollowers)\n          //console.log(this.theFollowers[5].names)\n          this.show2 = !this.show2\n          return\n        }\n      }\n\n    //re-add follower to approved authors list if follower is among articles created  \n    /*if (this.theArticles.indexOf(this.follower_name) > -1) {\n        this.theAuthors.push(this.follower_name)\n      }*/\n    /*console.log(\"the Authors\"+ this.theAuthors)\n    if (this.theAuthors.indexOf(this.follower_name) == -1) {\n        alert('New friend not a registered user; Please add only registered users as friends.')\n        return \n      }*/\n\n\n    //add the new follower back to the approved authors list\n    //this.theAuthors.push(this.follower_name)\n    //console.log(\"135\" + this.follower_name)\n\n\n    \n  \n\n\n  public\n  show3: boolean = false;\n\n  commentViewing(){\n    this.show3 = !this.show3\n  } \n  //changes the view button text\n  /*commentViewing(article, element, text) {\n    if (element.textContent == text) {\n      element.textContent = \"View Comments\";\n      console.log(\"article of comment viewig\" + article.comment)\n      var preserve = (article.comment).substr(0, (article.comment).length)\n      //article.comment = \"\"\n      this.show3 = false\n      //console.log(\"show3\" + this.show3)\n    } else {\n      element.textContent = text;\n      //article.comment = preserve\n      this.show3 = true\n      //console.log(\"show3\" + this.show3)\n\n    }\n  }*/\n\n\n\n\n\n\n  //shows or hides the comments\n\n  /*\n      showingComments(){\n        //var heresy = (<HTMLInputElement>document.getElementById('some_comments')).textContent\n        //console.log(heresy + \"comment button  val\"+(<HTMLInputElement>document.getElementById('some_comments')).textContent)\n        if((<HTMLInputElement>document.getElementById('some_comments')).textContent == 'Hide Comments'){\n          return true\n        }else{\n          return false\n        }\n\n      }*/\n\n\n/*\n  filterArticle(anArticle){\n      /* me trying to be extra and extract the followers list\n      var names = []\n      var i;\n      if (this.theFollowers!== \"undefined\"){\n      for (i = 0; i < this.theFollowers.length; i++) {\n        names.push(this.theFollowers[i].names)\n} }\n      console.log(\"names\"+names)\n\n      //console.log(\"this.theFollowers.indexOf(anArticle.author) == -1\" + names.indexOf(anArticle.author) )\n      \n      if (anArticle.author !== \"\" && typeof this.theAuthors !== 'undefined'){\n\n        console.log()\n        \n\n        if (this.theAuthors.indexOf(anArticle.author) == -1) {\n\n          \n\n          return false\n        }\n      }\n\n      //console.log(names)\n      \n      //console.log(getFriendNames())\n\n      if (typeof this.theAuthors !== 'undefined') {\n        var authors = JSON.parse(JSON.stringify(this.theAuthors))\n        console.log(\"mi amor\"+authors)\n       \n        \n        if (anArticle.author !== \"\"){\n\n        console.log()\n        if (this.theAuthors.indexOf(anArticle.author) == -1) {\n         \n          \n\n          return false\n        }\n      }\n\n       //if there's nothing in the search bar display all valid articles\n        if(typeof this.searchParameters == 'undefined' ) {\n\n          \n\n          return true}\n\n        if ((anArticle.author.toUpperCase()).indexOf(this.searchParameters.toUpperCase()) > -1) {  \n          \n          \n\n          return true\n      }\n\n        if ((anArticle.titles.toUpperCase()).indexOf(this.searchParameters.toUpperCase()) > -1) {  \n          \n          //has passed requirement, so add article to external json file of displayed articles\n          \n\n          return true\n      }\n\n\n         //has passed requirement, so add article to external json file of displayed articles\n          \n\n         return false\n  }\n        \n\n        //do i neeed to set this.someArticles to some other variable like articles or can i Just extract the variable value directly...?\n        articles = this.someArticles\n        console.log(\"this is the some articles list i created\" + this.someArticles)\n        return true\n       } */\n\n  \n\n  filterArticle(anArticle) {\n    //this.shared = 'yes'\n    //console.log(\"line 223 this.shared\" + this.shared)\n    //console.log(\"line 224 authors\" +this.theAuthors)\n    //console.log(\"search parameters 225 \"+ this.searchParameters)\n    \n\n\n\n\n    //console.log(\"sup friends\")\n    //console.log(\"an article\"+ anArticle +\"this.theAuthors\"+ this.theAuthors)\n    if (anArticle.author !== \"\" && typeof this.theAuthors !== 'undefined') {\n      //console.log(\"yayyy, anArticle.author and this.theAuthors are defined\")\n      //console.log(\"look at index to see if article should display line 227\"+(this.theAuthors.indexOf(anArticle.author)))\n      if (this.theAuthors.indexOf(anArticle.author) == -1) {\n        this.shared = \"no\"\n        return false\n      }\n    }\n\n\n    if (typeof this.theAuthors !== 'undefined') {\n      var authors = JSON.parse(JSON.stringify(this.theAuthors))\n      \n      //console.log(\"mi amor\" + authors)\n\n\n      if (anArticle.author !== \"\") {\n\n        //console.log()\n        if (this.theAuthors.indexOf(anArticle.author) == -1) {\n          this.shared = \"no\"\n          //console.log(\"line 243 this.shared\" + this.shared)\n          return false\n        }\n      }\n\n      if (typeof this.searchParameters == 'undefined') {\n        this.shared = \"yes\"\n        return true\n      }\n\n      if ((anArticle.author.toUpperCase()).indexOf(this.searchParameters.toUpperCase()) > -1) {\n        //console.log(\"search parameters 252  has authorr\"+ this.searchParameters)\n        this.shared = \"yes\"\n        return true\n      }\n\n      if ((anArticle.titles.toUpperCase()).indexOf(this.searchParameters.toUpperCase()) > -1) {\n        //console.log(\"search parameters 252 has title \"+ this.searchParameters)\n        this.shared = \"yes\"\n        return true\n      }\n      this.shared = \"no\"\n      return false\n    }\n    this.shared = \"yes\"\n\n\n    \n    return true\n  }\n\n  logout(){\n    this.loginStatus = \"logged out\"\n  }\n\n\n  removeFriend(follower_name2,follower_email2) {\n    //console.log(\"a follower \"+ aFollower.names)\n    //console.log(\"a follower \" + aFollower.id)\n    /*var index = aFollower.id\n    //console.log(index)\n    delete this.theFollowers[(this.theFollowers.length) - (index + 1)]\n    //console.log(this.theFollowers[index] === undefined)\n\n    this.theAuthors.splice(this.theAuthors.indexOf(aFollower.names), 1);*/\n    //console.log(\"line 285 removing friend authors\"+ this.theAuthors + \"ther followers too\"+ this.theFollowers)\n    //console.log(\"authors\" + this.theAuthors)\n    //get a list of the authors still remaining\n    this.followerProfileId = ''\n    this.friendRegistered = \"true\"\n    //getting the profile info of the new follower\n    this.http.get(this.url + '/profileId/'+ follower_name2 +\"/\"+ follower_email2, {'withCredentials':true}).subscribe(result =>{this.followerProfileId = result['profileId']; localStorage.setItem(\"theFollowerProfileId\", result['profileId'])\n      if (this.followerProfileId == \"none\"){\n        alert('Not already a registered friend; You may only remove friends you currently have.')\n        this.friendRegistered = \"false\"\n        console.log(\"FRIEND REGISTEREDDDD?\" + this.friendRegistered)\n      }   \n\n    ;});\n      \n    console.log(\"this is the followerProfileId\"+localStorage.getItem(\"theFollowerProfileId\"))\n    //check to see if the user is on file\n    \n    if (this.friendRegistered == \"false\"){\n      //we won't add this unregistered friend, and can exit the addFollower function\n      alert(\"friend not registered\")\n      return\n    }\n\n\n    //using that info to add the new user\n\n    this.http.delete(this.url + '/following/'+ localStorage.getItem(\"theFollowerProfileId\"), {'withCredentials':true}).subscribe(result =>{this.newFollowerList = result['following']; \n          console.log(\"result \"+result);console.log(\"this.theFollowers AYYYYYYYYYYY\"+ this.newFollowerList)\n          if (this.newFollowerList == \"not a user on file\"){\n            console.log(\"somehow we still tried to add them as a friend even tho we should've exited the function since the 'new friend' wasn't registered.\")\n          }\n          else{\n            //reload the page once you've updated your following list if it does need to be updated/removed user is a valid friend\n            location.reload()\n          }\n        });\n        \n    //and using the modified get function to provide the neccesary additional info\n    this.http.get(this.url +\"/followingInfo/\"+ this.profileId , {'withCredentials':true}).subscribe(result =>{this.theFollowers = result['following']; console.log(result['following']); \n      console.log(this.theFollowers);});\n  }\n\n\n  searching(searchKeyword){\n    console.log(\"search Parameter 300\"+this.searchParameters)\n    this.searchParameters = searchKeyword\n    console.log(\"302 these are our search parameters\" + this.searchParameters)\n\n  }\n\n  ngOnInit() {\n  }\n\n\n}\n","import {Injectable} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {Router} from '@angular/router';\nimport {HttpModule} from '@angular/http';\nimport {HttpClient} from '@angular/common/http';\nimport {FOLLOWERS} from './follower-class';\nimport {Observable} from 'rxjs';\nimport {debounceTime, map} from 'rxjs/operators';\n\n//import {HttpClientModule} from '@angular/commmon/http';\n\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class MainService {\n\n\n  theFollowers;\n  theAuthors;\n\n  title: string;\n  //theFollowers;\n  theArticles;\n  articlesCopy;\n  //theAuthors;\n  authors;\n  names;\n  // status;\n\n  public newPost: string;\n  public rows: Array<{ newPost: string }> = [];\n\n\n  newStatus = '';\n  status = \"I'm feeling blessed.\";\n\n  constructor(private http: HttpClient) {\n  }\n\n\n  /*http.get('/assets/followers.json').subscribe(res => {\n  this.theFollowers=res;} );\n\n  //get the authors list\n  http.get('/assets/authors.json').subscribe(res => {\n  this.theAuthors=res;});*/\n\n\n  public show2: boolean = false;\n\n/*\n  toggle2() {\n    this.show2 = !this.show2\n    return\n  }*/\n\n\n  /*public show2:boolean = false;\n  addFollower(){\n      //check for validation\n      if (!this.follower_name){\n        console.log(\"account name is not valid \")\n        alert('follower name required to create follower')  \n        return\n      }\n      if (!this.follower_status){\n        alert(\"status required to create follower\")\n        return\n      }\n\n      //add the new follower back to the approved authors list\n      this.theAuthors.push(this.follower_name)\n      console.log(\"135\" + this.follower_name)\n\n\n      console.log(\"before\" +this.theFollowers)\n      this.theFollowers.unshift({\"id\": this.theFollowers.length, \"names\": this.follower_name, \"avatar\": \"assets/doe.png\", \"status\": this.follower_status})\n\n      console.log(\"after\"+ this.theFollowers)\n      console.log(this.theFollowers[5].names)\n      this.show2 = !this.show2\n    }*/\n\n\n  //console.log()\n\n\n  //(<HTMLInputElement>document.getElementById('some_comments')).textContent\n\n  someMethod() {\n    return \"Feed\"\n  }\n\n\n  hasImage(anArticle) {\n    if (typeof anArticle !== 'undefined') {\n      //console.log(anArticle)\n      if (anArticle.image !== \"none\") {\n        return true\n      }\n      return false\n    }\n    return true\n  }\n\n  isDefined(anything) {\n    if (anything === undefined) {\n      return false\n    }\n    else {\n      return true\n    }\n  }\n\n  /*\n  public show: boolean = false;\n\n  atoggle() {\n    this.show = !this.show;\n    return;\n  }*/\n\n  /*changeStatus(value: string): void {\n   console.log(\"service show\"+ this.show)\n   this.show = !this.show;\n   this.status = ` '${value}'\\n`\n   console.log(\"service status\"+this.status)\n   return this.status\n   ;}*/\n\n\n  makePost(form) {\n    console.log(\"make post button works\");\n    //makes their entry a new row in the table\n    //this.rows.push( {newPost: this.newPost } );\n    this.theArticles.unshift({\"titles\": this.newPost, \"image\": \"none\", \"author\": \"\", \"date\": \"\"})\n    //clears the input\n    this.newPost = null;\n  }\n\n/*\n  filterArticle(anArticle) {\n    //console.log(searching)\n    if (typeof this.theAuthors !== 'undefined') {\n      var authors = JSON.parse(JSON.stringify(this.theAuthors))\n      console.log(\"hey buddy \")\n      //this.show3 = true\n      //console.log(anArticle.author);\n      if (typeof this.searchParameters == 'undefined') {\n        return true\n      }\n\n      if ((anArticle.author.toUpperCase()).indexOf(this.searchParameters.toUpperCase()) > -1) {\n        console.log(anArticle.author + \"success\");\n        return true\n      }\n\n      if ((anArticle.titles.toUpperCase()).indexOf(this.searchParameters.toUpperCase()) > -1) {\n        console.log(anArticle.titles + \"success\");\n        return true\n      }\n      return false\n    }\n    return true;\n  }*/\n\n/*\n  addFollower() {\n    //check for validation\n    if (!this.follower_name) {\n      console.log(\"account name is not valid \")\n      alert('follower name required to create follower')\n      return\n    }\n    if (!this.follower_status) {\n      alert(\"status required to create follower\")\n      return\n    }\n    console.log(\"before\" + this.theFollowers)\n    this.theFollowers.unshift({\n      \"id\": this.theFollowers.length,\n      \"name\": this.follower_name,\n      \"avatar\": \"assets/doe2.png\",\n      \"status\": this.follower_status\n    })\n\n    console.log(\"after\" + this.theFollowers)\n    console.log(this.theFollowers[5].name)\n    this.show2 = !this.show2;\n  };*/\n\n\n  //get the friends and folllowers for the side bar\n  /*http.get('/assets/followers.json').subscribe(res => {\n    this.theFollowers=res;\n\n  } );*/\n\n\n}\n","module.exports = \"\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\\n<div class=\\\"row\\\" class=\\\"float-left\\\">\\t\\n    <h6>     Jojo</h6>\\n\\n    <img id=\\\"img1\\\" src= \\\"assets/jojo.png\\\" alt=\\\"Jojo\\\" style=\\\"width:60px;height:80px;\\\">\\t\\n    \\n  </div>\\n\\n<a routerLink=\\\"/main\\\">Return to Main Page</a>\\n<a routerLink=\\\"/app\\\" (click) = \\\"logout()\\\">Logout </a>\\n\\n<div class=\\\"center\\\">\\n\\n<h1> Registration Info: </h1> <br><br>\\n\\n<button type=\\\"button\\\" (click)=\\\"toggle()\\\" class=\\\"btn btn-primary btn-sm center\\\">Update Registration Details </button>\\n\\n<h5>\\n  \\n\\n  <!--Account name: {{Account_name}}   \\n  \\n  <ng-container *ngIf=\\\"show\\\">\\n    \\n      <br> <br>\\n\\n      <textarea [(ngModel)]=\\\"account_name\\\" #textarea rows=\\\"1\\\" class=\\\"form-control\\\"  name=\\\"account_update\\\" type=\\\"text\\\"></textarea> <br>\\n\\n      <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,0)\\\" class=\\\"btn btn-primary btn-sm\\\">Submit </button>\\n    \\n  </ng-container><br><br>\\n  \\n\\n\\n  \\n  Net Id: {{Net_id}} \\n    \\n    <ng-container *ngIf=\\\"show\\\">\\n    \\n      <br> <br>\\n      <textarea class=\\\"form-control\\\" #textarea rows=\\\"1\\\" name=\\\"display_update\\\" type=\\\"text\\\"></textarea>  <br>\\n    \\n       <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,1)\\\" class=\\\"btn btn-primary btn-sm\\\">Submit </button>\\n    </ng-container> <br><br>-->\\n\\n  \\n  Email: {{Email}}  \\n    \\n    <ng-container *ngIf=\\\"show\\\">\\n    <!-- Changing your email handle value-->\\n<br> <br>\\n      <textarea class = \\\"form-control\\\" #textarea rows=\\\"1\\\"  name=\\\"display_update\\\" type=\\\"text\\\"></textarea> <br> \\n      \\n      <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,2)\\\" class=\\\"btn btn-primary btn-sm\\\">Update </button>\\n    </ng-container> <br><br>\\n  \\n\\n  <!--\\n  Phone number:  {{Phone_number}} \\n    \\n    <ng-container *ngIf=\\\"show\\\">\\n    \\n      <br> <br>\\n\\n      <textarea class=\\\"form-control\\\" #textarea rows=\\\"1\\\" name=\\\"display_update\\\" type=\\\"text\\\"></textarea> <br> \\n\\n      <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,3)\\\" class=\\\"btn btn-primary btn-sm\\\">Submit </button>\\n    \\n    </ng-container> <br><br>-->\\n  \\n  Birthdate:  {{Birthdate}} \\n\\n  <br><br>\\n  \\n \\n  Zipcode: {{Zipcode}} \\n    \\n    <ng-container *ngIf=\\\"show\\\">\\n    <!-- Changing your account name value-->\\n     \\n      <br> <br>\\n      <textarea class=\\\"form-control\\\" #textarea rows=\\\"1\\\"  name=\\\"display_update\\\" type=\\\"text\\\"></textarea> <br> \\n\\n      <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,5)\\\" class=\\\"btn btn-primary btn-sm\\\">Submit </button>\\n    \\n     </ng-container> <br><br>\\n  \\n  \\n  Password: {{Password}} \\n    \\n    <ng-container *ngIf=\\\"show\\\">\\n    <!-- Changing your account name value-->\\n       <br> <br>\\n       <textarea  class=\\\"form-control\\\" #textarea rows=\\\"1\\\" name=\\\"display_update\\\" type=\\\"text\\\"></textarea> <br> \\n\\n       <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,6)\\\" class=\\\"btn btn-primary btn-sm\\\">Submit </button>\\n\\n      \\n    \\n    </ng-container> <br><br>\\n  \\n  \\n  <!--Password confirmation: {{Password_confirmation}} \\n     \\n     <ng-container *ngIf=\\\"show\\\">\\n    \\n       <br> <br>\\n\\n        <textarea class=\\\"form-control\\\" #textarea rows=\\\"1\\\"  name=\\\"display_update\\\" type=\\\"text\\\"></textarea> <br>\\n\\n         \\n         <button type=\\\"button\\\" (click)=\\\"Update(textarea.value,7)\\\" class=\\\"btn btn-primary btn-sm\\\">Submit </button><br><br>\\n     </ng-container> -->\\n\\n\\n\\n</h5>\\n     <button type=\\\"button\\\" (click)=\\\"toggle2()\\\" class=\\\" btn btn-primary btn-sm center\\\">Select New Profile Image </button>\\n\\n\\n<ng-container *ngIf=\\\"show2\\\">\\n    <!-- Changing your account name value-->\\n       <br> <br>\\n  <div class=\\\"form-group\\\">\\n      <input type=\\\"file\\\" (change)=\\\"onFileChanged($event)\\\">\\n    </div>\\n</ng-container> <br><br>\\n\\n</div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n<!--label for=\\\"typeahead-basic\\\">Search for article by author:</label>-->\\n\\n<!--input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model\\\"-->\\n\\n<!--input id=\\\"typeahead-basic\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model\\\" \\n(change)=\\\"search\\\"/>\\n<hr>\\n<h5>Author: {{ model | json }}</h5-->\\n\\n\\n\\n\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {NgForm} from '@angular/forms';\nimport {HttpModule} from '@angular/http';\nimport { HttpClient } from '@angular/common/http';\n\nimport { FormsModule } from '@angular/forms';\n\n\n//import {Observable} from 'rxjs';\n//import {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\n\nexport class ProfileComponent implements OnInit {\n  profileId = localStorage.getItem(\"profileId\")\n  loginStatus;\n  status;\n  url = \"http://localhost:3000\"\n  //url = \"https://jolisa-hw7backend.herokuapp.com\"\n  Email;\n  Zipcode;\n  Birthdate;\n  Password;\n  \n  constructor(private http: HttpClient) { \n    //this.http.get(this.url +\"/email\", {'withCredentials':true}).subscribe(result =>{Email = result['email']; console.log(result['email'])} \n    this.http.get(this.url +\"/email/\"+ this.profileId , {'withCredentials':true}).subscribe(result =>{this.Email = result['email']; console.log(result['email']);});\n    this.http.get(this.url + '/dob/' +this.profileId, {'withCredentials':true}).subscribe(result =>{this.Birthdate = result['dob']; console.log(result['dob']);});\n    this.http.get(this.url + '/zipcode/' +this.profileId, {'withCredentials':true}).subscribe(result =>{this.Zipcode = result['zipcode']; console.log(result['zipcode']);});\n    this.Password = \"Confidential\"\n   }\n\n\n  public show:boolean = false;\n     toggle() {\n     this.show = !this.show;\n    }\n\n  public show2:boolean = false;\n     toggle2() {\n     this.show2 = !this.show2;\n    }\n \n   logout(){\n    this.loginStatus = \"logged out\"\n  }\n\n  \n  Update(text, number){\n    var payload = {}\n   if (number == 2){\n     //localStorage.setItem(\"theEmail\", text);\n     payload = {\"email\": text}\n\n     this.http.put(this.url + '/email', payload, {'withCredentials':true}).subscribe(result =>{this.Email = result['email']; console.log(result)})\n    \n     \n\n\n     console.log(text)\n     location.reload();\n   }\n   \n   \n   if (number == 5){\n     //localStorage.setItem(\"theZipcode\", text);\n     payload = {\"zipcode\": text}\n     this.http.put(this.url + '/zipcode', payload, {'withCredentials':true}).subscribe(result =>{this.Zipcode = result['zipcode']; console.log(result)})\n    \n     \n     location.reload();\n   }\n   if (number == 6){\n     //localStorage.setItem(\"thePassword\", text);\n     //localStorage.setItem(\"thePasswordConfirmation\", text);\n     payload = {\"password\": text}\n     this.http.put(this.url + '/password', payload, {'withCredentials':true}).subscribe(result =>{this.Password = result['zipcode']; console.log(result)})\n     location.reload();\n   }\n  \n\n  }\n\n      \n  ngOnInit() {}\n\n\n}\n\n\n","module.exports = \"\"","module.exports = \"\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.css']\n})\nexport class SearchComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {debounceTime, distinctUntilChanged, map} from 'rxjs/operators';\n\n@Component({\n  selector: 'app-searchbar',\n  templateUrl: './searchbar.component.html',\n  styleUrls: ['./searchbar.component.css']\n})\nexport class SearchbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}